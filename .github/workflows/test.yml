name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build project

    strategy:
      fail-fast: true
      matrix:
        arch: ["amd64"]
        os: 
          - ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'

      - name: Build
        run: go build -v ./...
    
      - name: Test
        run: go test -v ./...

      - name: Approve PR
        if: github.event_name == 'pull_request'
        run: |
          gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ github.token }}

  renovate:
    name: Auto merge PRs from Renovate
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'renovate[bot]'

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Auto merge PR
        run: |
          gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ github.token }}

  semantic-release:
    name: Run sematic-release
    needs: [build]
    runs-on: ubuntu-latest
    environment: production
    if: github.event.pusher.name == 'renovate[bot]'

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'main',
              'next',
              'next-major',
              {
                name: 'beta',
                prerelease: true
              },
              {
                name: 'alpha',
                prerelease: true
              }
            ]
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/github
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}